<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athjt.springboot.mappers.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.athjt.springboot.model.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="coin" jdbcType="INTEGER" property="coin" />
    <result column="diamond" jdbcType="INTEGER" property="diamond" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, avatar_url, sex, mobile, password, intro, last_login_time, create_time, update_time, 
    age, nick_name, real_name, coin, diamond, deleted
  </sql>
  <select id="selectByExample" parameterType="com.athjt.springboot.model.TeacherCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.athjt.springboot.model.TeacherCriteria">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.athjt.springboot.model.Teacher">
    insert into teacher (id, avatar_url, sex, 
      mobile, password, intro, 
      last_login_time, create_time, update_time, 
      age, nick_name, real_name, 
      coin, diamond, deleted
      )
    values (#{id,jdbcType=INTEGER}, #{avatarUrl,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{age,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{coin,jdbcType=INTEGER}, #{diamond,jdbcType=INTEGER}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.athjt.springboot.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="diamond != null">
        diamond,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=INTEGER},
      </if>
      <if test="diamond != null">
        #{diamond,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into teacher (id, avatar_url, sex, 
      mobile, password, intro, 
      last_login_time, create_time, 
      update_time, age, nick_name, 
      real_name, coin, diamond, 
      deleted)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.avatarUrl,jdbcType=VARCHAR}, #{item.sex,jdbcType=INTEGER}, 
        #{item.mobile,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.intro,jdbcType=VARCHAR}, 
        #{item.lastLoginTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.age,jdbcType=INTEGER}, #{item.nickName,jdbcType=VARCHAR}, 
        #{item.realName,jdbcType=VARCHAR}, #{item.coin,jdbcType=INTEGER}, #{item.diamond,jdbcType=INTEGER}, 
        #{item.deleted,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into teacher
    (id, avatar_url, sex, mobile, password, intro, last_login_time, create_time, update_time, 
      age, nick_name, real_name, coin, diamond, deleted)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.avatarUrl != null">
          #{item.avatarUrl,jdbcType=VARCHAR},
        </if>
        <if test="item.avatarUrl == null">
          NULL,
        </if>
        <if test="item.sex != null">
          #{item.sex,jdbcType=INTEGER},
        </if>
        <if test="item.sex == null">
          NULL,
        </if>
        <if test="item.mobile != null">
          #{item.mobile,jdbcType=VARCHAR},
        </if>
        <if test="item.mobile == null">
          NULL,
        </if>
        <if test="item.password != null">
          #{item.password,jdbcType=VARCHAR},
        </if>
        <if test="item.password == null">
          NULL,
        </if>
        <if test="item.intro != null">
          #{item.intro,jdbcType=VARCHAR},
        </if>
        <if test="item.intro == null">
          NULL,
        </if>
        <if test="item.lastLoginTime != null">
          #{item.lastLoginTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.lastLoginTime == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
        <if test="item.updateTime != null">
          #{item.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateTime == null">
          NULL,
        </if>
        <if test="item.age != null">
          #{item.age,jdbcType=INTEGER},
        </if>
        <if test="item.age == null">
          NULL,
        </if>
        <if test="item.nickName != null">
          #{item.nickName,jdbcType=VARCHAR},
        </if>
        <if test="item.nickName == null">
          NULL,
        </if>
        <if test="item.realName != null">
          #{item.realName,jdbcType=VARCHAR},
        </if>
        <if test="item.realName == null">
          NULL,
        </if>
        <if test="item.coin != null">
          #{item.coin,jdbcType=INTEGER},
        </if>
        <if test="item.coin == null">
          NULL,
        </if>
        <if test="item.diamond != null">
          #{item.diamond,jdbcType=INTEGER},
        </if>
        <if test="item.diamond == null">
          NULL,
        </if>
        <if test="item.deleted != null">
          #{item.deleted,jdbcType=INTEGER},
        </if>
        <if test="item.deleted == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.athjt.springboot.model.TeacherCriteria" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=INTEGER},
      </if>
      <if test="record.diamond != null">
        diamond = #{record.diamond,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      age = #{record.age,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      coin = #{record.coin,jdbcType=INTEGER},
      diamond = #{record.diamond,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.athjt.springboot.model.Teacher">
    update teacher
    <set>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=INTEGER},
      </if>
      <if test="diamond != null">
        diamond = #{diamond,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.athjt.springboot.model.Teacher">
    update teacher
    set avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      age = #{age,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      coin = #{coin,jdbcType=INTEGER},
      diamond = #{diamond,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update teacher
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="avatar_url =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.avatarUrl}
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.sex}
        </foreach>
      </trim>
      <trim prefix="mobile =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.mobile}
        </foreach>
      </trim>
      <trim prefix="password =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.password}
        </foreach>
      </trim>
      <trim prefix="intro =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.intro}
        </foreach>
      </trim>
      <trim prefix="last_login_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.lastLoginTime}
        </foreach>
      </trim>
      <trim prefix="create_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
      <trim prefix="age =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.age}
        </foreach>
      </trim>
      <trim prefix="nick_name =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.nickName}
        </foreach>
      </trim>
      <trim prefix="real_name =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.realName}
        </foreach>
      </trim>
      <trim prefix="coin =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.coin}
        </foreach>
      </trim>
      <trim prefix="diamond =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.diamond}
        </foreach>
      </trim>
      <trim prefix="deleted =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.deleted}
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update teacher
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="avatar_url =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.avatarUrl != null ">
            when  #{item.id} then #{item.avatarUrl}
          </if>
          <if test="item.avatarUrl == null ">
            when  #{item.id} then teacher.avatar_url
          </if>
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.sex != null ">
            when  #{item.id} then #{item.sex}
          </if>
          <if test="item.sex == null ">
            when  #{item.id} then teacher.sex
          </if>
        </foreach>
      </trim>
      <trim prefix="mobile =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.mobile != null ">
            when  #{item.id} then #{item.mobile}
          </if>
          <if test="item.mobile == null ">
            when  #{item.id} then teacher.mobile
          </if>
        </foreach>
      </trim>
      <trim prefix="password =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.password != null ">
            when  #{item.id} then #{item.password}
          </if>
          <if test="item.password == null ">
            when  #{item.id} then teacher.password
          </if>
        </foreach>
      </trim>
      <trim prefix="intro =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.intro != null ">
            when  #{item.id} then #{item.intro}
          </if>
          <if test="item.intro == null ">
            when  #{item.id} then teacher.intro
          </if>
        </foreach>
      </trim>
      <trim prefix="last_login_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.lastLoginTime != null ">
            when  #{item.id} then #{item.lastLoginTime}
          </if>
          <if test="item.lastLoginTime == null ">
            when  #{item.id} then teacher.last_login_time
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then teacher.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then teacher.update_time
          </if>
        </foreach>
      </trim>
      <trim prefix="age =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.age != null ">
            when  #{item.id} then #{item.age}
          </if>
          <if test="item.age == null ">
            when  #{item.id} then teacher.age
          </if>
        </foreach>
      </trim>
      <trim prefix="nick_name =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.nickName != null ">
            when  #{item.id} then #{item.nickName}
          </if>
          <if test="item.nickName == null ">
            when  #{item.id} then teacher.nick_name
          </if>
        </foreach>
      </trim>
      <trim prefix="real_name =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.realName != null ">
            when  #{item.id} then #{item.realName}
          </if>
          <if test="item.realName == null ">
            when  #{item.id} then teacher.real_name
          </if>
        </foreach>
      </trim>
      <trim prefix="coin =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.coin != null ">
            when  #{item.id} then #{item.coin}
          </if>
          <if test="item.coin == null ">
            when  #{item.id} then teacher.coin
          </if>
        </foreach>
      </trim>
      <trim prefix="diamond =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.diamond != null ">
            when  #{item.id} then #{item.diamond}
          </if>
          <if test="item.diamond == null ">
            when  #{item.id} then teacher.diamond
          </if>
        </foreach>
      </trim>
      <trim prefix="deleted =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.deleted != null ">
            when  #{item.id} then #{item.deleted}
          </if>
          <if test="item.deleted == null ">
            when  #{item.id} then teacher.deleted
          </if>
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update teacher
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="avatar_url =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.avatarUrl}
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.sex}
        </foreach>
      </trim>
      <trim prefix="mobile =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.mobile}
        </foreach>
      </trim>
      <trim prefix="password =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.password}
        </foreach>
      </trim>
      <trim prefix="intro =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.intro}
        </foreach>
      </trim>
      <trim prefix="last_login_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.lastLoginTime}
        </foreach>
      </trim>
      <trim prefix="create_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
      <trim prefix="age =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.age}
        </foreach>
      </trim>
      <trim prefix="nick_name =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.nickName}
        </foreach>
      </trim>
      <trim prefix="real_name =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.realName}
        </foreach>
      </trim>
      <trim prefix="coin =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.coin}
        </foreach>
      </trim>
      <trim prefix="diamond =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.diamond}
        </foreach>
      </trim>
      <trim prefix="deleted =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.deleted}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update teacher
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="avatar_url =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.avatarUrl != null ">
            when  #{item.id} then #{item.avatarUrl}
          </if>
          <if test="item.avatarUrl == null ">
            when  #{item.id} then teacher.avatar_url
          </if>
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.sex != null ">
            when  #{item.id} then #{item.sex}
          </if>
          <if test="item.sex == null ">
            when  #{item.id} then teacher.sex
          </if>
        </foreach>
      </trim>
      <trim prefix="mobile =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.mobile != null ">
            when  #{item.id} then #{item.mobile}
          </if>
          <if test="item.mobile == null ">
            when  #{item.id} then teacher.mobile
          </if>
        </foreach>
      </trim>
      <trim prefix="password =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.password != null ">
            when  #{item.id} then #{item.password}
          </if>
          <if test="item.password == null ">
            when  #{item.id} then teacher.password
          </if>
        </foreach>
      </trim>
      <trim prefix="intro =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.intro != null ">
            when  #{item.id} then #{item.intro}
          </if>
          <if test="item.intro == null ">
            when  #{item.id} then teacher.intro
          </if>
        </foreach>
      </trim>
      <trim prefix="last_login_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.lastLoginTime != null ">
            when  #{item.id} then #{item.lastLoginTime}
          </if>
          <if test="item.lastLoginTime == null ">
            when  #{item.id} then teacher.last_login_time
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then teacher.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.id} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.id} then teacher.update_time
          </if>
        </foreach>
      </trim>
      <trim prefix="age =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.age != null ">
            when  #{item.id} then #{item.age}
          </if>
          <if test="item.age == null ">
            when  #{item.id} then teacher.age
          </if>
        </foreach>
      </trim>
      <trim prefix="nick_name =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.nickName != null ">
            when  #{item.id} then #{item.nickName}
          </if>
          <if test="item.nickName == null ">
            when  #{item.id} then teacher.nick_name
          </if>
        </foreach>
      </trim>
      <trim prefix="real_name =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.realName != null ">
            when  #{item.id} then #{item.realName}
          </if>
          <if test="item.realName == null ">
            when  #{item.id} then teacher.real_name
          </if>
        </foreach>
      </trim>
      <trim prefix="coin =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.coin != null ">
            when  #{item.id} then #{item.coin}
          </if>
          <if test="item.coin == null ">
            when  #{item.id} then teacher.coin
          </if>
        </foreach>
      </trim>
      <trim prefix="diamond =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.diamond != null ">
            when  #{item.id} then #{item.diamond}
          </if>
          <if test="item.diamond == null ">
            when  #{item.id} then teacher.diamond
          </if>
        </foreach>
      </trim>
      <trim prefix="deleted =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.deleted != null ">
            when  #{item.id} then #{item.deleted}
          </if>
          <if test="item.deleted == null ">
            when  #{item.id} then teacher.deleted
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>