<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.athjt.springboot.mappers.UserMapper">
  <resultMap id="BaseResultMap" type="com.athjt.springboot.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="head" jdbcType="VARCHAR" property="head" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="left_eye_degree" jdbcType="INTEGER" property="leftEyeDegree" />
    <result column="right_eye_degree" jdbcType="INTEGER" property="rightEyeDegree" />
    <result column="video_dynamic_rate" jdbcType="DOUBLE" property="videoDynamicRate" />
    <result column="coin" jdbcType="INTEGER" property="coin" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="diamond" jdbcType="INTEGER" property="diamond" />
    <result column="pay_pwd" jdbcType="VARCHAR" property="payPwd" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="union_id" jdbcType="VARCHAR" property="unionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, head, sex, last_login_date, mobile, password, create_time, update_time, 
    left_eye_degree, right_eye_degree, video_dynamic_rate, coin, deleted, diamond, pay_pwd, 
    open_id, union_id
  </sql>
  <select id="selectByExample" parameterType="com.athjt.springboot.model.UserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.athjt.springboot.model.UserCriteria">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.athjt.springboot.model.User">
    insert into user (user_id, user_name, head, 
      sex, last_login_date, mobile, 
      password, create_time, update_time, 
      left_eye_degree, right_eye_degree, video_dynamic_rate, 
      coin, deleted, diamond, 
      pay_pwd, open_id, union_id
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{head,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{lastLoginDate,jdbcType=TIMESTAMP}, #{mobile,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{leftEyeDegree,jdbcType=INTEGER}, #{rightEyeDegree,jdbcType=INTEGER}, #{videoDynamicRate,jdbcType=DOUBLE}, 
      #{coin,jdbcType=INTEGER}, #{deleted,jdbcType=TINYINT}, #{diamond,jdbcType=INTEGER}, 
      #{payPwd,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{unionId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.athjt.springboot.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="head != null">
        head,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="leftEyeDegree != null">
        left_eye_degree,
      </if>
      <if test="rightEyeDegree != null">
        right_eye_degree,
      </if>
      <if test="videoDynamicRate != null">
        video_dynamic_rate,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="diamond != null">
        diamond,
      </if>
      <if test="payPwd != null">
        pay_pwd,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="unionId != null">
        union_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        #{head,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leftEyeDegree != null">
        #{leftEyeDegree,jdbcType=INTEGER},
      </if>
      <if test="rightEyeDegree != null">
        #{rightEyeDegree,jdbcType=INTEGER},
      </if>
      <if test="videoDynamicRate != null">
        #{videoDynamicRate,jdbcType=DOUBLE},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="diamond != null">
        #{diamond,jdbcType=INTEGER},
      </if>
      <if test="payPwd != null">
        #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into user (user_id, user_name, head, 
      sex, last_login_date, mobile, 
      password, create_time, update_time, 
      left_eye_degree, right_eye_degree, 
      video_dynamic_rate, coin, deleted, 
      diamond, pay_pwd, open_id, 
      union_id)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.userId,jdbcType=INTEGER}, #{item.userName,jdbcType=VARCHAR}, #{item.head,jdbcType=VARCHAR}, 
        #{item.sex,jdbcType=INTEGER}, #{item.lastLoginDate,jdbcType=TIMESTAMP}, #{item.mobile,jdbcType=VARCHAR}, 
        #{item.password,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.leftEyeDegree,jdbcType=INTEGER}, #{item.rightEyeDegree,jdbcType=INTEGER}, 
        #{item.videoDynamicRate,jdbcType=DOUBLE}, #{item.coin,jdbcType=INTEGER}, #{item.deleted,jdbcType=TINYINT}, 
        #{item.diamond,jdbcType=INTEGER}, #{item.payPwd,jdbcType=VARCHAR}, #{item.openId,jdbcType=VARCHAR}, 
        #{item.unionId,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into user
    (user_id, user_name, head, sex, last_login_date, mobile, password, create_time, update_time, 
      left_eye_degree, right_eye_degree, video_dynamic_rate, coin, deleted, diamond, 
      pay_pwd, open_id, union_id)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.userId != null">
          #{item.userId,jdbcType=INTEGER},
        </if>
        <if test="item.userId == null">
          NULL,
        </if>
        <if test="item.userName != null">
          #{item.userName,jdbcType=VARCHAR},
        </if>
        <if test="item.userName == null">
          NULL,
        </if>
        <if test="item.head != null">
          #{item.head,jdbcType=VARCHAR},
        </if>
        <if test="item.head == null">
          NULL,
        </if>
        <if test="item.sex != null">
          #{item.sex,jdbcType=INTEGER},
        </if>
        <if test="item.sex == null">
          NULL,
        </if>
        <if test="item.lastLoginDate != null">
          #{item.lastLoginDate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.lastLoginDate == null">
          NULL,
        </if>
        <if test="item.mobile != null">
          #{item.mobile,jdbcType=VARCHAR},
        </if>
        <if test="item.mobile == null">
          NULL,
        </if>
        <if test="item.password != null">
          #{item.password,jdbcType=VARCHAR},
        </if>
        <if test="item.password == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
        <if test="item.updateTime != null">
          #{item.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateTime == null">
          NULL,
        </if>
        <if test="item.leftEyeDegree != null">
          #{item.leftEyeDegree,jdbcType=INTEGER},
        </if>
        <if test="item.leftEyeDegree == null">
          NULL,
        </if>
        <if test="item.rightEyeDegree != null">
          #{item.rightEyeDegree,jdbcType=INTEGER},
        </if>
        <if test="item.rightEyeDegree == null">
          NULL,
        </if>
        <if test="item.videoDynamicRate != null">
          #{item.videoDynamicRate,jdbcType=DOUBLE},
        </if>
        <if test="item.videoDynamicRate == null">
          NULL,
        </if>
        <if test="item.coin != null">
          #{item.coin,jdbcType=INTEGER},
        </if>
        <if test="item.coin == null">
          NULL,
        </if>
        <if test="item.deleted != null">
          #{item.deleted,jdbcType=TINYINT},
        </if>
        <if test="item.deleted == null">
          NULL,
        </if>
        <if test="item.diamond != null">
          #{item.diamond,jdbcType=INTEGER},
        </if>
        <if test="item.diamond == null">
          NULL,
        </if>
        <if test="item.payPwd != null">
          #{item.payPwd,jdbcType=VARCHAR},
        </if>
        <if test="item.payPwd == null">
          NULL,
        </if>
        <if test="item.openId != null">
          #{item.openId,jdbcType=VARCHAR},
        </if>
        <if test="item.openId == null">
          NULL,
        </if>
        <if test="item.unionId != null">
          #{item.unionId,jdbcType=VARCHAR},
        </if>
        <if test="item.unionId == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.athjt.springboot.model.UserCriteria" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.head != null">
        head = #{record.head,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.lastLoginDate != null">
        last_login_date = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.leftEyeDegree != null">
        left_eye_degree = #{record.leftEyeDegree,jdbcType=INTEGER},
      </if>
      <if test="record.rightEyeDegree != null">
        right_eye_degree = #{record.rightEyeDegree,jdbcType=INTEGER},
      </if>
      <if test="record.videoDynamicRate != null">
        video_dynamic_rate = #{record.videoDynamicRate,jdbcType=DOUBLE},
      </if>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=INTEGER},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.diamond != null">
        diamond = #{record.diamond,jdbcType=INTEGER},
      </if>
      <if test="record.payPwd != null">
        pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.unionId != null">
        union_id = #{record.unionId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      head = #{record.head,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      last_login_date = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      left_eye_degree = #{record.leftEyeDegree,jdbcType=INTEGER},
      right_eye_degree = #{record.rightEyeDegree,jdbcType=INTEGER},
      video_dynamic_rate = #{record.videoDynamicRate,jdbcType=DOUBLE},
      coin = #{record.coin,jdbcType=INTEGER},
      deleted = #{record.deleted,jdbcType=TINYINT},
      diamond = #{record.diamond,jdbcType=INTEGER},
      pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      union_id = #{record.unionId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.athjt.springboot.model.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        head = #{head,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leftEyeDegree != null">
        left_eye_degree = #{leftEyeDegree,jdbcType=INTEGER},
      </if>
      <if test="rightEyeDegree != null">
        right_eye_degree = #{rightEyeDegree,jdbcType=INTEGER},
      </if>
      <if test="videoDynamicRate != null">
        video_dynamic_rate = #{videoDynamicRate,jdbcType=DOUBLE},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="diamond != null">
        diamond = #{diamond,jdbcType=INTEGER},
      </if>
      <if test="payPwd != null">
        pay_pwd = #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        union_id = #{unionId,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.athjt.springboot.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      head = #{head,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      left_eye_degree = #{leftEyeDegree,jdbcType=INTEGER},
      right_eye_degree = #{rightEyeDegree,jdbcType=INTEGER},
      video_dynamic_rate = #{videoDynamicRate,jdbcType=DOUBLE},
      coin = #{coin,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=TINYINT},
      diamond = #{diamond,jdbcType=INTEGER},
      pay_pwd = #{payPwd,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      union_id = #{unionId,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userName}
        </foreach>
      </trim>
      <trim prefix="head =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.head}
        </foreach>
      </trim>
      <trim prefix="sex =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.sex}
        </foreach>
      </trim>
      <trim prefix="last_login_date =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.lastLoginDate}
        </foreach>
      </trim>
      <trim prefix="mobile =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.mobile}
        </foreach>
      </trim>
      <trim prefix="password =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.password}
        </foreach>
      </trim>
      <trim prefix="create_time =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.updateTime}
        </foreach>
      </trim>
      <trim prefix="left_eye_degree =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.leftEyeDegree}
        </foreach>
      </trim>
      <trim prefix="right_eye_degree =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.rightEyeDegree}
        </foreach>
      </trim>
      <trim prefix="video_dynamic_rate =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.videoDynamicRate}
        </foreach>
      </trim>
      <trim prefix="coin =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.coin}
        </foreach>
      </trim>
      <trim prefix="deleted =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.deleted}
        </foreach>
      </trim>
      <trim prefix="diamond =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.diamond}
        </foreach>
      </trim>
      <trim prefix="pay_pwd =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.payPwd}
        </foreach>
      </trim>
      <trim prefix="open_id =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.openId}
        </foreach>
      </trim>
      <trim prefix="union_id =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.unionId}
        </foreach>
      </trim>
    </trim>
    where user_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.userId} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userName != null ">
            when  #{item.userId} then #{item.userName}
          </if>
          <if test="item.userName == null ">
            when  #{item.userId} then user.user_name
          </if>
        </foreach>
      </trim>
      <trim prefix="head =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.head != null ">
            when  #{item.userId} then #{item.head}
          </if>
          <if test="item.head == null ">
            when  #{item.userId} then user.head
          </if>
        </foreach>
      </trim>
      <trim prefix="sex =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.sex != null ">
            when  #{item.userId} then #{item.sex}
          </if>
          <if test="item.sex == null ">
            when  #{item.userId} then user.sex
          </if>
        </foreach>
      </trim>
      <trim prefix="last_login_date =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.lastLoginDate != null ">
            when  #{item.userId} then #{item.lastLoginDate}
          </if>
          <if test="item.lastLoginDate == null ">
            when  #{item.userId} then user.last_login_date
          </if>
        </foreach>
      </trim>
      <trim prefix="mobile =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.mobile != null ">
            when  #{item.userId} then #{item.mobile}
          </if>
          <if test="item.mobile == null ">
            when  #{item.userId} then user.mobile
          </if>
        </foreach>
      </trim>
      <trim prefix="password =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.password != null ">
            when  #{item.userId} then #{item.password}
          </if>
          <if test="item.password == null ">
            when  #{item.userId} then user.password
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.userId} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.userId} then user.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.userId} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.userId} then user.update_time
          </if>
        </foreach>
      </trim>
      <trim prefix="left_eye_degree =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.leftEyeDegree != null ">
            when  #{item.userId} then #{item.leftEyeDegree}
          </if>
          <if test="item.leftEyeDegree == null ">
            when  #{item.userId} then user.left_eye_degree
          </if>
        </foreach>
      </trim>
      <trim prefix="right_eye_degree =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.rightEyeDegree != null ">
            when  #{item.userId} then #{item.rightEyeDegree}
          </if>
          <if test="item.rightEyeDegree == null ">
            when  #{item.userId} then user.right_eye_degree
          </if>
        </foreach>
      </trim>
      <trim prefix="video_dynamic_rate =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.videoDynamicRate != null ">
            when  #{item.userId} then #{item.videoDynamicRate}
          </if>
          <if test="item.videoDynamicRate == null ">
            when  #{item.userId} then user.video_dynamic_rate
          </if>
        </foreach>
      </trim>
      <trim prefix="coin =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.coin != null ">
            when  #{item.userId} then #{item.coin}
          </if>
          <if test="item.coin == null ">
            when  #{item.userId} then user.coin
          </if>
        </foreach>
      </trim>
      <trim prefix="deleted =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.deleted != null ">
            when  #{item.userId} then #{item.deleted}
          </if>
          <if test="item.deleted == null ">
            when  #{item.userId} then user.deleted
          </if>
        </foreach>
      </trim>
      <trim prefix="diamond =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.diamond != null ">
            when  #{item.userId} then #{item.diamond}
          </if>
          <if test="item.diamond == null ">
            when  #{item.userId} then user.diamond
          </if>
        </foreach>
      </trim>
      <trim prefix="pay_pwd =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.payPwd != null ">
            when  #{item.userId} then #{item.payPwd}
          </if>
          <if test="item.payPwd == null ">
            when  #{item.userId} then user.pay_pwd
          </if>
        </foreach>
      </trim>
      <trim prefix="open_id =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.openId != null ">
            when  #{item.userId} then #{item.openId}
          </if>
          <if test="item.openId == null ">
            when  #{item.userId} then user.open_id
          </if>
        </foreach>
      </trim>
      <trim prefix="union_id =case user_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.unionId != null ">
            when  #{item.userId} then #{item.unionId}
          </if>
          <if test="item.unionId == null ">
            when  #{item.userId} then user.union_id
          </if>
        </foreach>
      </trim>
    </trim>
    where user_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.userId} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.userName}
        </foreach>
      </trim>
      <trim prefix="head =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.head}
        </foreach>
      </trim>
      <trim prefix="sex =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.sex}
        </foreach>
      </trim>
      <trim prefix="last_login_date =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.lastLoginDate}
        </foreach>
      </trim>
      <trim prefix="mobile =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.mobile}
        </foreach>
      </trim>
      <trim prefix="password =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.password}
        </foreach>
      </trim>
      <trim prefix="create_time =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.updateTime}
        </foreach>
      </trim>
      <trim prefix="left_eye_degree =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.leftEyeDegree}
        </foreach>
      </trim>
      <trim prefix="right_eye_degree =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.rightEyeDegree}
        </foreach>
      </trim>
      <trim prefix="video_dynamic_rate =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.videoDynamicRate}
        </foreach>
      </trim>
      <trim prefix="coin =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.coin}
        </foreach>
      </trim>
      <trim prefix="deleted =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.deleted}
        </foreach>
      </trim>
      <trim prefix="diamond =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.diamond}
        </foreach>
      </trim>
      <trim prefix="pay_pwd =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.payPwd}
        </foreach>
      </trim>
      <trim prefix="open_id =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.openId}
        </foreach>
      </trim>
      <trim prefix="union_id =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.userId} then #{item.unionId}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.userName != null ">
            when  #{item.userId} then #{item.userName}
          </if>
          <if test="item.userName == null ">
            when  #{item.userId} then user.user_name
          </if>
        </foreach>
      </trim>
      <trim prefix="head =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.head != null ">
            when  #{item.userId} then #{item.head}
          </if>
          <if test="item.head == null ">
            when  #{item.userId} then user.head
          </if>
        </foreach>
      </trim>
      <trim prefix="sex =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.sex != null ">
            when  #{item.userId} then #{item.sex}
          </if>
          <if test="item.sex == null ">
            when  #{item.userId} then user.sex
          </if>
        </foreach>
      </trim>
      <trim prefix="last_login_date =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.lastLoginDate != null ">
            when  #{item.userId} then #{item.lastLoginDate}
          </if>
          <if test="item.lastLoginDate == null ">
            when  #{item.userId} then user.last_login_date
          </if>
        </foreach>
      </trim>
      <trim prefix="mobile =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.mobile != null ">
            when  #{item.userId} then #{item.mobile}
          </if>
          <if test="item.mobile == null ">
            when  #{item.userId} then user.mobile
          </if>
        </foreach>
      </trim>
      <trim prefix="password =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.password != null ">
            when  #{item.userId} then #{item.password}
          </if>
          <if test="item.password == null ">
            when  #{item.userId} then user.password
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.userId} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.userId} then user.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.userId} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.userId} then user.update_time
          </if>
        </foreach>
      </trim>
      <trim prefix="left_eye_degree =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.leftEyeDegree != null ">
            when  #{item.userId} then #{item.leftEyeDegree}
          </if>
          <if test="item.leftEyeDegree == null ">
            when  #{item.userId} then user.left_eye_degree
          </if>
        </foreach>
      </trim>
      <trim prefix="right_eye_degree =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.rightEyeDegree != null ">
            when  #{item.userId} then #{item.rightEyeDegree}
          </if>
          <if test="item.rightEyeDegree == null ">
            when  #{item.userId} then user.right_eye_degree
          </if>
        </foreach>
      </trim>
      <trim prefix="video_dynamic_rate =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.videoDynamicRate != null ">
            when  #{item.userId} then #{item.videoDynamicRate}
          </if>
          <if test="item.videoDynamicRate == null ">
            when  #{item.userId} then user.video_dynamic_rate
          </if>
        </foreach>
      </trim>
      <trim prefix="coin =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.coin != null ">
            when  #{item.userId} then #{item.coin}
          </if>
          <if test="item.coin == null ">
            when  #{item.userId} then user.coin
          </if>
        </foreach>
      </trim>
      <trim prefix="deleted =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.deleted != null ">
            when  #{item.userId} then #{item.deleted}
          </if>
          <if test="item.deleted == null ">
            when  #{item.userId} then user.deleted
          </if>
        </foreach>
      </trim>
      <trim prefix="diamond =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.diamond != null ">
            when  #{item.userId} then #{item.diamond}
          </if>
          <if test="item.diamond == null ">
            when  #{item.userId} then user.diamond
          </if>
        </foreach>
      </trim>
      <trim prefix="pay_pwd =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.payPwd != null ">
            when  #{item.userId} then #{item.payPwd}
          </if>
          <if test="item.payPwd == null ">
            when  #{item.userId} then user.pay_pwd
          </if>
        </foreach>
      </trim>
      <trim prefix="open_id =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.openId != null ">
            when  #{item.userId} then #{item.openId}
          </if>
          <if test="item.openId == null ">
            when  #{item.userId} then user.open_id
          </if>
        </foreach>
      </trim>
      <trim prefix="union_id =case user_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.unionId != null ">
            when  #{item.userId} then #{item.unionId}
          </if>
          <if test="item.unionId == null ">
            when  #{item.userId} then user.union_id
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>